{"remainingRequest":"F:\\AAAAJeecg-boot\\jeecgbootwithonline\\ant-design-jeecg-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\AAAAJeecg-boot\\jeecgbootwithonline\\ant-design-jeecg-vue\\src\\components\\jeecg\\JSuperQuery.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\AAAAJeecg-boot\\jeecgbootwithonline\\ant-design-jeecg-vue\\src\\components\\jeecg\\JSuperQuery.vue","mtime":1572876612133},{"path":"F:\\AAAAJeecg-boot\\jeecgbootwithonline\\ant-design-jeecg-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572241135682},{"path":"F:\\AAAAJeecg-boot\\jeecgbootwithonline\\ant-design-jeecg-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1572241093574},{"path":"F:\\AAAAJeecg-boot\\jeecgbootwithonline\\ant-design-jeecg-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572241135682},{"path":"F:\\AAAAJeecg-boot\\jeecgbootwithonline\\ant-design-jeecg-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1574652421668}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as utils from '@/utils/util'\nimport JDate from '@/components/jeecg/JDate.vue'\nimport JSelectDepart from '@/components/jeecgbiz/JSelectDepart'\nimport JSelectMultiUser from '@/components/jeecgbiz/JSelectMultiUser'\n\nexport default {\n  name: 'JSuperQuery',\n  components: { JDate, JSelectDepart, JSelectMultiUser },\n  props: {\n    /*\n     fieldList: [{\n        value:'',\n        text:'',\n        type:'',\n        dictCode:'' // 只要 dictCode 有值，无论 type 是什么，都显示为字典下拉框\n     }]\n     type:date datetime int number string\n    * */\n    fieldList: {\n      type: Array,\n      required: true\n    },\n    /*\n    * 这个回调函数接收一个数组参数 即查询条件\n    * */\n    callback: {\n      type: String,\n      required: false,\n      default: 'handleSuperQuery'\n    },\n\n    // 当前是否在加载中\n    loading: {\n      type: Boolean,\n      default: false\n    },\n\n    // 保存查询条件的唯一 code，通过该 code 区分\n    saveCode: {\n      type: String,\n      default: 'testSaveCode'\n    }\n\n  },\n  data() {\n    return {\n\n      prompt: {\n        visible: false,\n        value: ''\n      },\n\n      visible: false,\n      queryParamsModel: [{}],\n      treeIcon: <a-icon type=\"file-text\"/>,\n      treeData: [],\n      // 保存查询条件的前缀名\n      saveCodeBefore: 'JSuperQuerySaved_',\n      selectValue: 'and',\n    }\n  },\n  watch: {\n    // 当 saveCode 变化时，重新查询已保存的条件\n    saveCode: {\n      immediate: true,\n      handler(val) {\n        let list = this.$ls.get(this.saveCodeBefore + val)\n        if (list instanceof Array) {\n          this.treeData = list.map(item => {\n            item.icon = this.treeIcon\n            return item\n          })\n        }\n      }\n    }\n  },\n\n  methods: {\n    show() {\n      if (!this.queryParamsModel || this.queryParamsModel.length == 0) {\n        this.queryParamsModel = [{}]\n      }\n      this.visible = true\n    },\n    handleOk() {\n      console.log('---高级查询参数--->', this.queryParamsModel)\n      if (!this.isNullArray(this.queryParamsModel)) {\n        let event = {\n          matchType: this.selectValue,\n          params: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\n        }\n        this.$emit(this.callback, event.params, event.matchType)\n      } else {\n        this.$emit(this.callback)\n      }\n    },\n    handleCancel() {\n      this.close()\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleAdd() {\n      this.queryParamsModel.push({})\n    },\n    handleDel(index) {\n      this.queryParamsModel.splice(index, 1)\n    },\n    handleSelected(option, item) {\n      let index = option.data.attrs['data-idx']\n\n      let { type, dictCode, dictTable, customReturnField } = this.fieldList[index]\n      item['type'] = type\n      item['dictCode'] = dictCode\n      item['dictTable'] = dictTable\n      item['customReturnField'] = customReturnField\n      this.$set(item, 'val', '')\n    },\n    handleReset() {\n      this.queryParamsModel = [{}]\n      this.$emit(this.callback)\n    },\n    handleSave() {\n      let queryParams = this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\n      if (this.isNullArray(queryParams)) {\n        this.$message.warning('空条件不能保存')\n      } else {\n        this.prompt.value = ''\n        this.prompt.visible = true\n      }\n    },\n    handlePromptOk() {\n\n      let { value } = this.prompt\n      // 判断有没有重名\n\n      let filterList = this.treeData.filter(i => i.title === value)\n      if (filterList.length > 0) {\n        this.$confirm({\n          content: `${value} 已存在，是否覆盖？`,\n          onOk: () => {\n            this.prompt.visible = false\n            filterList[0].records = this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\n            this.saveToLocalStore()\n            this.$message.success('保存成功')\n          }\n        })\n      } else {\n        this.prompt.visible = false\n        this.treeData.push({\n          title: value,\n          icon: this.treeIcon,\n          records: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\n        })\n        this.saveToLocalStore()\n        this.$message.success('保存成功')\n      }\n\n\n    },\n    handleTreeSelect(idx, event) {\n      if (event.selectedNodes[0]) {\n        this.queryParamsModel = utils.cloneObject(event.selectedNodes[0].data.props.records)\n      }\n    },\n    handleTreeRightClick(args) {\n      this.$confirm({\n        content: '是否删除当前查询？',\n        onOk: () => {\n          let { node: { eventKey } } = args\n          this.treeData.splice(Number.parseInt(eventKey.substring(2)), 1)\n          this.saveToLocalStore()\n          this.$message.success('删除成功')\n        },\n      })\n    },\n\n    // 将查询保存到 LocalStore 里\n    saveToLocalStore() {\n      this.$ls.set(this.saveCodeBefore + this.saveCode, this.treeData.map(item => {\n        return { title: item.title, records: item.records }\n      }))\n    },\n\n    isNullArray(array) {\n      //判断是不是空数组对象\n      if (!array || array.length === 0) {\n        return true\n      }\n      if (array.length === 1) {\n        let obj = array[0]\n        if (!obj.field || !obj.val || !obj.rule) {\n          return true\n        }\n      }\n      return false\n    },\n    // 去掉数组中的空对象\n    removeEmptyObject(array) {\n      for (let i = 0; i < array.length; i++) {\n        let item = array[i]\n        if (item == null || Object.keys(item).length <= 0) {\n          array.splice(i--, 1)\n        }\n      }\n      return array\n    }\n  }\n}\n",{"version":3,"sources":["JSuperQuery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JSuperQuery.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-modal\r\n    title=\"高级查询构造器\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    @cancel=\"handleCancel\"\r\n    :mask=\"false\"\r\n    wrapClassName=\"ant-modal-cust-warp\"\r\n    class=\"j-super-query-modal\"\r\n    style=\"top:5%;max-height: 95%;\">\r\n\r\n    <template slot=\"footer\">\r\n      <div style=\"float: left\">\r\n        <a-button :loading=\"loading\" @click=\"handleReset\">重置</a-button>\r\n        <a-button :loading=\"loading\" @click=\"handleSave\">保存查询条件</a-button>\r\n      </div>\r\n      <a-button :loading=\"loading\" @click=\"handleCancel\">关闭</a-button>\r\n      <a-button :loading=\"loading\" type=\"primary\" @click=\"handleOk\">查询</a-button>\r\n    </template>\r\n\r\n    <a-spin :spinning=\"loading\">\r\n      <a-row>\r\n        <a-col :sm=\"24\" :md=\"24-5\">\r\n\r\n          <a-empty v-if=\"queryParamsModel.length === 0\">\r\n            <div slot=\"description\">\r\n              <span>没有任何查询条件</span>\r\n              <a-divider type=\"vertical\"/>\r\n              <a @click=\"handleAdd\">点击新增</a>\r\n            </div>\r\n          </a-empty>\r\n\r\n          <a-form v-else layout=\"inline\">\r\n\r\n            <a-form-item label=\"过滤条件匹配\" style=\"margin-bottom: 12px;\">\r\n              <a-select v-model=\"selectValue\">\r\n                <a-select-option value=\"and\">AND（所有条件都要求匹配）</a-select-option>\r\n                <a-select-option value=\"or\">OR（条件中的任意一个匹配）</a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n\r\n            <a-row type=\"flex\" style=\"margin-bottom:10px\" :gutter=\"16\" v-for=\"(item, index) in queryParamsModel\" :key=\"index\">\r\n\r\n              <a-col :span=\"8\">\r\n                <a-select placeholder=\"选择查询字段\" v-model=\"item.field\" @select=\"(val,option)=>handleSelected(option,item)\">\r\n                  <a-select-option v-for=\"(f,fIndex) in fieldList\" :key=\" 'field'+fIndex\" :value=\"f.value\" :data-idx=\"fIndex\">{{ f.text }}</a-select-option>\r\n                </a-select>\r\n              </a-col>\r\n\r\n              <a-col :span=\"4\">\r\n                <a-select placeholder=\"匹配规则\" v-model=\"item.rule\">\r\n                  <a-select-option value=\"eq\">等于</a-select-option>\r\n                  <a-select-option value=\"ne\">不等于</a-select-option>\r\n                  <a-select-option value=\"gt\">大于</a-select-option>\r\n                  <a-select-option value=\"ge\">大于等于</a-select-option>\r\n                  <a-select-option value=\"lt\">小于</a-select-option>\r\n                  <a-select-option value=\"le\">小于等于</a-select-option>\r\n                  <a-select-option value=\"right_like\">以..开始</a-select-option>\r\n                  <a-select-option value=\"left_like\">以..结尾</a-select-option>\r\n                  <a-select-option value=\"like\">包含</a-select-option>\r\n                  <a-select-option value=\"in\">在...中</a-select-option>\r\n                </a-select>\r\n              </a-col>\r\n\r\n              <a-col :span=\"8\">\r\n                <template v-if=\"item.dictCode\">\r\n                  <template v-if=\"item.type === 'table-dict'\">\r\n                    <j-popup\r\n                      v-model=\"item.val\"\r\n                      :code=\"item.dictTable\"\r\n                      :field=\"item.dictCode\"\r\n                      :orgFields=\"item.dictCode\"\r\n                      :destFields=\"item.dictCode\"\r\n                    ></j-popup>\r\n                  </template>\r\n                  <j-dict-select-tag v-else v-model=\"item.val\" :dictCode=\"item.dictCode\" placeholder=\"请选择\"/>\r\n                </template>\r\n                <j-select-multi-user\r\n                  v-else-if=\"item.type === 'select-user'\"\r\n                  v-model=\"item.val\"\r\n                  :buttons=\"false\"\r\n                  :multiple=\"false\"\r\n                  placeholder=\"请选择用户\"\r\n                  :returnKeys=\"['id', item.customReturnField || 'username']\"\r\n                />\r\n                <j-select-depart\r\n                  v-else-if=\"item.type === 'select-depart'\"\r\n                  v-model=\"item.val\"\r\n                  :multi=\"false\"\r\n                  placeholder=\"请选择部门\"\r\n                  :customReturnField=\"item.customReturnField || 'id'\"\r\n                />\r\n                <j-date v-else-if=\" item.type=='date' \" v-model=\"item.val\" placeholder=\"请选择日期\" style=\"width: 100%\"></j-date>\r\n                <j-date v-else-if=\" item.type=='datetime' \" v-model=\"item.val\" placeholder=\"请选择时间\" :show-time=\"true\" date-format=\"YYYY-MM-DD HH:mm:ss\" style=\"width: 100%\"></j-date>\r\n                <a-input-number v-else-if=\" item.type=='int'||item.type=='number' \" style=\"width: 100%\" placeholder=\"请输入数值\" v-model=\"item.val\"/>\r\n                <a-input v-else v-model=\"item.val\" placeholder=\"请输入值\"/>\r\n              </a-col>\r\n\r\n              <a-col :span=\"4\">\r\n                <a-button @click=\"handleAdd\" icon=\"plus\"></a-button>&nbsp;\r\n                <a-button @click=\"handleDel( index )\" icon=\"minus\"></a-button>\r\n              </a-col>\r\n\r\n            </a-row>\r\n\r\n          </a-form>\r\n        </a-col>\r\n        <a-col :sm=\"24\" :md=\"5\">\r\n          <!-- 查询记录 -->\r\n\r\n          <a-card class=\"j-super-query-history-card\" :bordered=\"true\">\r\n            <div slot=\"title\">\r\n              保存的查询\r\n            </div>\r\n\r\n            <a-empty v-if=\"treeData.length === 0\" class=\"j-super-query-history-empty\" description=\"没有保存任何查询\"/>\r\n            <a-tree\r\n              v-else\r\n              class=\"j-super-query-history-tree\"\r\n              showIcon\r\n              :treeData=\"treeData\"\r\n              @select=\"handleTreeSelect\"\r\n              @rightClick=\"handleTreeRightClick\"\r\n            >\r\n            </a-tree>\r\n          </a-card>\r\n\r\n\r\n        </a-col>\r\n      </a-row>\r\n\r\n\r\n    </a-spin>\r\n\r\n    <a-modal title=\"请输入保存的名称\" :visible=\"prompt.visible\" @cancel=\"prompt.visible=false\" @ok=\"handlePromptOk\">\r\n      <a-input v-model=\"prompt.value\"></a-input>\r\n    </a-modal>\r\n\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import * as utils from '@/utils/util'\r\n  import JDate from '@/components/jeecg/JDate.vue'\r\n  import JSelectDepart from '@/components/jeecgbiz/JSelectDepart'\r\n  import JSelectMultiUser from '@/components/jeecgbiz/JSelectMultiUser'\r\n\r\n  export default {\r\n    name: 'JSuperQuery',\r\n    components: { JDate, JSelectDepart, JSelectMultiUser },\r\n    props: {\r\n      /*\r\n       fieldList: [{\r\n          value:'',\r\n          text:'',\r\n          type:'',\r\n          dictCode:'' // 只要 dictCode 有值，无论 type 是什么，都显示为字典下拉框\r\n       }]\r\n       type:date datetime int number string\r\n      * */\r\n      fieldList: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      /*\r\n      * 这个回调函数接收一个数组参数 即查询条件\r\n      * */\r\n      callback: {\r\n        type: String,\r\n        required: false,\r\n        default: 'handleSuperQuery'\r\n      },\r\n\r\n      // 当前是否在加载中\r\n      loading: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n\r\n      // 保存查询条件的唯一 code，通过该 code 区分\r\n      saveCode: {\r\n        type: String,\r\n        default: 'testSaveCode'\r\n      }\r\n\r\n    },\r\n    data() {\r\n      return {\r\n\r\n        prompt: {\r\n          visible: false,\r\n          value: ''\r\n        },\r\n\r\n        visible: false,\r\n        queryParamsModel: [{}],\r\n        treeIcon: <a-icon type=\"file-text\"/>,\r\n        treeData: [],\r\n        // 保存查询条件的前缀名\r\n        saveCodeBefore: 'JSuperQuerySaved_',\r\n        selectValue: 'and',\r\n      }\r\n    },\r\n    watch: {\r\n      // 当 saveCode 变化时，重新查询已保存的条件\r\n      saveCode: {\r\n        immediate: true,\r\n        handler(val) {\r\n          let list = this.$ls.get(this.saveCodeBefore + val)\r\n          if (list instanceof Array) {\r\n            this.treeData = list.map(item => {\r\n              item.icon = this.treeIcon\r\n              return item\r\n            })\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      show() {\r\n        if (!this.queryParamsModel || this.queryParamsModel.length == 0) {\r\n          this.queryParamsModel = [{}]\r\n        }\r\n        this.visible = true\r\n      },\r\n      handleOk() {\r\n        console.log('---高级查询参数--->', this.queryParamsModel)\r\n        if (!this.isNullArray(this.queryParamsModel)) {\r\n          let event = {\r\n            matchType: this.selectValue,\r\n            params: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n          }\r\n          this.$emit(this.callback, event.params, event.matchType)\r\n        } else {\r\n          this.$emit(this.callback)\r\n        }\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleAdd() {\r\n        this.queryParamsModel.push({})\r\n      },\r\n      handleDel(index) {\r\n        this.queryParamsModel.splice(index, 1)\r\n      },\r\n      handleSelected(option, item) {\r\n        let index = option.data.attrs['data-idx']\r\n\r\n        let { type, dictCode, dictTable, customReturnField } = this.fieldList[index]\r\n        item['type'] = type\r\n        item['dictCode'] = dictCode\r\n        item['dictTable'] = dictTable\r\n        item['customReturnField'] = customReturnField\r\n        this.$set(item, 'val', '')\r\n      },\r\n      handleReset() {\r\n        this.queryParamsModel = [{}]\r\n        this.$emit(this.callback)\r\n      },\r\n      handleSave() {\r\n        let queryParams = this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n        if (this.isNullArray(queryParams)) {\r\n          this.$message.warning('空条件不能保存')\r\n        } else {\r\n          this.prompt.value = ''\r\n          this.prompt.visible = true\r\n        }\r\n      },\r\n      handlePromptOk() {\r\n\r\n        let { value } = this.prompt\r\n        // 判断有没有重名\r\n\r\n        let filterList = this.treeData.filter(i => i.title === value)\r\n        if (filterList.length > 0) {\r\n          this.$confirm({\r\n            content: `${value} 已存在，是否覆盖？`,\r\n            onOk: () => {\r\n              this.prompt.visible = false\r\n              filterList[0].records = this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n              this.saveToLocalStore()\r\n              this.$message.success('保存成功')\r\n            }\r\n          })\r\n        } else {\r\n          this.prompt.visible = false\r\n          this.treeData.push({\r\n            title: value,\r\n            icon: this.treeIcon,\r\n            records: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n          })\r\n          this.saveToLocalStore()\r\n          this.$message.success('保存成功')\r\n        }\r\n\r\n\r\n      },\r\n      handleTreeSelect(idx, event) {\r\n        if (event.selectedNodes[0]) {\r\n          this.queryParamsModel = utils.cloneObject(event.selectedNodes[0].data.props.records)\r\n        }\r\n      },\r\n      handleTreeRightClick(args) {\r\n        this.$confirm({\r\n          content: '是否删除当前查询？',\r\n          onOk: () => {\r\n            let { node: { eventKey } } = args\r\n            this.treeData.splice(Number.parseInt(eventKey.substring(2)), 1)\r\n            this.saveToLocalStore()\r\n            this.$message.success('删除成功')\r\n          },\r\n        })\r\n      },\r\n\r\n      // 将查询保存到 LocalStore 里\r\n      saveToLocalStore() {\r\n        this.$ls.set(this.saveCodeBefore + this.saveCode, this.treeData.map(item => {\r\n          return { title: item.title, records: item.records }\r\n        }))\r\n      },\r\n\r\n      isNullArray(array) {\r\n        //判断是不是空数组对象\r\n        if (!array || array.length === 0) {\r\n          return true\r\n        }\r\n        if (array.length === 1) {\r\n          let obj = array[0]\r\n          if (!obj.field || !obj.val || !obj.rule) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      },\r\n      // 去掉数组中的空对象\r\n      removeEmptyObject(array) {\r\n        for (let i = 0; i < array.length; i++) {\r\n          let item = array[i]\r\n          if (item == null || Object.keys(item).length <= 0) {\r\n            array.splice(i--, 1)\r\n          }\r\n        }\r\n        return array\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n  .j-super-query-modal {\r\n\r\n    /deep/ {\r\n    }\r\n\r\n    .j-super-query-history-card /deep/ {\r\n      .ant-card-body,\r\n      .ant-card-head-title {\r\n        padding: 0;\r\n      }\r\n\r\n      .ant-card-head {\r\n        padding: 4px 8px;\r\n        min-height: initial;\r\n      }\r\n    }\r\n\r\n    .j-super-query-history-empty /deep/ {\r\n      .ant-empty-image {\r\n        height: 80px;\r\n        line-height: 80px;\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      img {\r\n        width: 80px;\r\n        height: 65px;\r\n      }\r\n\r\n      .ant-empty-description {\r\n        color: #afafaf;\r\n        margin: 8px 0;\r\n      }\r\n    }\r\n\r\n    .j-super-query-history-tree /deep/ {\r\n      .ant-tree-switcher {\r\n        display: none;\r\n      }\r\n\r\n      .ant-tree-node-content-wrapper {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n</style>"]}]}